import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image';
import { useState, useEffect, createRef } from 'react'
import Check from '../icons/Check';
import ArrowRight from '../icons/ArrowRight';

import Web3 from 'web3';
const web3 = new Web3(new Web3.providers.HttpProvider() || 'http://localhost:3000');

export default function New() {
  const address = createRef();
  const [contract, setContract] = useState({});
  const [methods, setMethods] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [checkedMethod, setCheckedMethod] = useState('');
  const [errors, setErrors] = useState({});
  const [hasImage, setHasImage] = useState(false);

  const [focusedField, setFocusedField] = useState('');

  const isInitialMount = createRef(true);
  
  const methodSection = createRef();
  const descriptionSection = createRef();
  const description = createRef();

  const field1 = createRef();
  const field2 = createRef();

  function handleClick(e) {
    const fields = [field1, field2];
    if (fields.includes(e.target)) {
      if (focusedField === e.target.id) {
        return;
      }
      return setFocusedField(e.target.id);
    } else if (focusedField) {
      return setFocusedField('');
    }
  }

  useEffect((e) => {
    if (isInitialMount.current) {
      isInitialMount.current = false;
    } else {
      const methodData = contract?._jsonInterface?.filter(method => 
        method.type === 'function' &&
        method.outputs.length === 0
      );
      setMethods(methodData);
    }
  }, [contract, setContract, methods, setMethods, isInitialMount]);

  const getContract = async () => {
    if (!web3.utils.isAddress(address.current.value)) {
      return setErrors({ address: "Hmm, that doesn't look like an address. Try copy & pasting it again." });
    }
    
    setIsLoading(true);
    
    try {
      const data = await fetch(`https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address.current.value}&apikey=${process.env.NEXT_PUBLIC_ETHERSCAN_API_KEY}`);
      const json = await data.json();
      const abi = await JSON.parse(json.result[0].ABI);
      const builtContract = new web3.eth.Contract(abi);
      builtContract.name = json.result[0].ContractName
      setContract(builtContract);
    } catch (e) {
      console.log(e);
      // setErrors({ address: e });
    }
    
    setIsLoading(false);
  }

  function handleCheck(e, method) {
    if (e.target.checked) {
      setCheckedMethod(method);
    }
  }

  return (
    <div onClick={e => handleClick(e)} className='min-h-screen text-gray-800'>
      <Head>
        <title>Pick your contract</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className='sticky top-0 bg-white z-10 shadow'>
        <div className='relative flex items-center justify-between p-4 py-3'>
          <span>‚Üê</span>
          <div className='absolute left-1/2 transform -translate-x-1/2 cursor-pointer flex justify-center items-center h-9 w-8 p-1 rounded-md bg-blue-500'>
            <div className='text-white italic font-lora font-medium text-2xl'>F</div>
          </div>
          <button className="cursor-default h-min tracking-tight bg-blue-500 transition duration-200 hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 hover:text-blue-50 py-2 px-4 rounded-lg font-medium text-white">Publish</button>
        </div>
      </header>
      <main className='font-lora flex flex-col items-center mx-auto mb-64'>
        <div className={`background-pattern w-full ${hasImage ? 'h-64' : 'h-52'}`}></div>
        <section className={`-mt-32  mb-8 bg-white p-8 pt-10 sm:rounded-xl shadow max-w-lg mx-auto w-full`}>
          <div className={`${hasImage ? 'block' : 'hidden'} mb-4 -mt-28 border-4 border-white rounded-full w-36 h-36 bg-gray-50 mx-auto`}></div>
          <textarea rows='1' autoFocus onFocus={e => e.target.select()} type="text" placeholder="Add a Title..." className={`mb-[11px] focus:mb-[10px] pb-1 border-b focus:border-b-2 border-transparent hover:border-gray-300 focus:border-blue-500 w-full placeholder:text-gray-800 focus:placeholder:text-gray-400  font-lora text-4xl font-medium text-center transition duration-200 focus:outline-none`} />
          <textarea rows="1" onFocus={e => e.target.select()} placeholder="Add a description..." className='mb-[23px] focus:mb-[22px] pb-1 border-b focus:border-b-2 border-transparent hover:border-gray-300 focus:border-blue-500 w-full text-gray-500 placeholder:text-gray-500 focus:placeholder:text-gray-400 font-lora text-center transition duration-200 focus:outline-none'/>
          <div className='flex flex-col border rounded-lg sm:mx-8'>
            <div className='flex p-4'>
              <div className='flex-1 mr-4'>
                <h4 className='uppercase text-xs text-gray-400 tracking-wider font-karla mb-2'>Contract</h4>
                <h2 className='text-lg break-all'>Loot</h2>
              </div>
              <div className='flex-1 mr-4'>
                <h4 className='uppercase text-xs text-gray-400 tracking-wider font-karla mb-2'>What&apos;ll This do?</h4>
                <p className='text-lg break-all'>mint</p>
              </div>
            </div>
            <Link href={'https://etherscan.io/'} target={'_blank'}>
              <div className='cursor-pointer hover:bg-gray-50 rounded-b-lg border-t px-4 py-2 flex items-center justify-center transition duration-200 space-x-1.5'>
                <Image src='/etherscan-logo-circle.svg' width={16} height={16} />
                <span className='text-xs text-gray-500'>See on Etherscan</span>
              </div>
            </Link>
          </div>
        </section>
        <div className='space-y-8'>
          <div ref={field1} id={field1} className='w-full group'>
            <div className='p-8 w-full max-w-lg mx-auto rounded-lg hover:ring-1 group-hover:bg-gray-100/50 hover:ring-gray-200 transition duration-200'>
              <div className=''>
                <div className='flex items-baseline justify-between'>
                  <h2 name="title" className='text-2xl mb-4 mr-4 group-hover:text-sm transition-text duration-200'>renounceOwnership</h2>
                  <span className='text-xs text-gray-400 font-karla'>uint256</span>
                </div>
                <input name="title" placeholder="Write a useful prompt..." className='hidden group-hover:block placeholder:text-gray-400 border bg-white focus:ring-1 w-full text-2xl mb-2  rounded-lg p-2 px-4 transition duration-200 hover:text-gray-800 focus:text-gray-800 hover:border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500'/>
                <input name="description" placeholder="Write some helper text..." className='hidden group-hover:block placeholder:text-gray-400 font-lora rounded-lg mb-6 p-2 px-4 w-full bg-white focus:ring-1 transition duration-200 hover:text-gray-800 focus:text-gray-800 border hover:border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500'/>
                <div className='flex group-hover:hidden'>
                  <label className='relative flex flex-col items-start w-full' htmlFor='address'>
                    <input ref={address} 
                          autoFocus
                          placeholder='0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7'
                          className={`${contract.name === undefined ? 'rounded-lg' : 'rounded-t-lg text-gray-400'} group-hover:disabled: transition duration-200 hover:text-gray-800 focus:text-gray-800 border ${errors.address && 'border-red-400'} hover:border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 truncate py-2 px-4 md:pr-8  w-full`} 
                    />
                  </label>
                </div>
                <div className='hidden group-hover:flex'>
                  <label className='relative flex flex-col items-start w-full' htmlFor='address'>
                    <input ref={address} 
                          autoFocus
                          disabled
                          placeholder='0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7'
                          className={`${contract.name === undefined ? 'rounded-lg' : 'rounded-t-lg text-gray-400'} bg-transparent placeholder:text-gray-300 text-gray-300 group-hover:disabled: transition duration-200 hover:text-gray-800 focus:text-gray-800 border border-gray-200/70 hover:border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 truncate py-2 px-4 md:pr-8  w-full`} 
                    />
                  </label>
                </div>
                {errors.address && (
                <div className='mt-2'>
                  <p className='text-sm text-red-600'>{errors.address}</p>
                </div>
                )}
              </div>
            </div>
          </div>
          {/* <div ref={field2} id={field2} className='w-full border bg-gray-50/70 rounded-lg'> */}
          <div ref={field2} id={field2} className='w-full ring-1 ring-gray-200 bg-gray-100/50 rounded-lg'>
            <div className='p-8 w-full max-w-lg mx-auto rounded-lg '>
              <div className=''>
                <div className='flex justify-between items-baseline mb-4'>
                  <h4 className='text-sm text-gray-500'>renounceOwnership</h4>
                  <span className='text-xs text-gray-400 font-karla'>uint256</span>
                </div>
                <input name="title" placeholder="Write a useful prompt..." className='placeholder:text-gray-400 border bg-white focus:ring-1 w-full text-2xl mb-2  rounded-lg p-2 px-4 transition duration-200 hover:text-gray-800 focus:text-gray-800 hover:border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500'/>
                <input name="description" placeholder="Write some helper text..." className='placeholder:text-gray-400 font-lora rounded-lg mb-6 p-2 px-4 w-full bg-white focus:ring-1 transition duration-200 hover:text-gray-800 focus:text-gray-800 border hover:border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500'/>
                <div className='flex'>
                  <label className='relative flex flex-col items-start w-full' htmlFor='address'>
                    <input ref={address} 
                           disabled
                           placeholder='0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7'
                           className={`bg-transparent placeholder:text-gray-300 border-gray-200/50 rounded-lg transition duration-200 border truncate py-2 px-4 md:pr-8 w-full`} 
                    />
                  </label>
                </div>
                {errors.address && (
                <div className='mt-2'>
                  <p className='text-sm text-red-600'>{errors.address}</p>
                </div>
                )}
              </div>
            </div>
          </div>
          <div className='w-full '>
            <div className='p-8 w-full max-w-lg mx-auto rounded-lg'>
              <div className=''>
                <h2 className='text-2xl mb-4'>Connect your wallet</h2>
                <p className='font-lora text-gray-500'>You need an Ethereum wallet to submit this form.</p>
                <p className='font-lora text-gray-500 mb-6'>Don&apos;t have one? Use <Link href={'https://metamask.io/'} target={'_blank'}><span className='underline decoration-1 underline-offset-4 decoration-gray-300 hover:decoration-gray-500 cursor-pointer transition duration-200'>Metamask</span></Link>.</p>
                <div className='mb-6 flex items-center space-x-2'>
                  <div className='flex items-center space-x-1.5 text-blue-500'>
                    <Check />
                    <p className='font-medium font-karla'>Connected to <span className='font-semibold'>parsley.eth</span>.</p>
                  </div>
                  <Link href={'https://metamask.io/'} target={'_blank'}><span className='mt-0.5 text-gray-500 text-xs underline decoration-1 underline-offset-4 decoration-gray-300 hover:decoration-gray-500 cursor-pointer transition duration-200'>Change</span></Link>
                </div>
                <button className="font-karla cursor-default h-min tracking-tight bg-blue-500 transition duration-200 hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 hover:text-blue-50 py-2 px-4 rounded-lg font-medium text-white">Connect wallet</button>
              </div>
            </div>
          </div>
          <div className='mx-8 sm:mx-0'>
            <div className='relative p-8 w-full max-w-lg mx-auto rounded-lg ring-1 ring-blue-200/70 bg-blue-50/50'>
              <div className='absolute -left-3 -top-3 cursor-pointer flex justify-center items-center h-9 w-8 p-1 rounded-md bg-blue-500'>
                <div className='text-white italic font-lora font-medium text-2xl'>F</div>
              </div>
              <div className=''>
                <p className='font-lora text-gray-500 mb-4'><i>Anyone</i> can make a form for this contract ‚Äî make sure you trust it.</p>
                <div className='flex flex-col border bg-white rounded-lg mb-8'>
                  <div className='flex flex-col sm:flex-row space-y-4 sm:space-y-0 p-4 w-full'>
                    <div className='flex-1 mr-4'>
                      <h4 className='uppercase text-xs text-gray-400 tracking-wider font-karla mb-2'>Contract</h4>
                      <h2 className='text-lg break-all'>Loot</h2>
                    </div>
                    <div className='flex-1 mr-4'>
                      <h4 className='uppercase text-xs text-gray-400 tracking-wider font-karla mb-2'>What&apos;ll This do?</h4>
                      <p className='text-lg break-all'>mint</p>
                    </div>
                  </div>
                  <Link href={'https://etherscan.io/'} target={'_blank'}>
                    <div className='cursor-pointer hover:bg-gray-50 rounded-b-lg border-t px-4 py-2 flex items-center justify-center transition duration-200 space-x-1.5'>
                      <Image src='/etherscan-logo-circle.svg' width={16} height={16} />
                      <span className='text-xs text-gray-500'>See on Etherscan</span>
                    </div>
                  </Link>
                </div>
                <div className='flex items-center space-x-3'>
                  <input name="confirmaton"
                        type='checkbox'
                        className={`rounded-lg transition duration-200 hover:text-gray-800 focus:text-gray-800 border hover:border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 truncate`} 
                  />
                  <label htmlFor='confirmation'>I trust this form</label>
                </div>
                {errors.trust && (
                  <div className='mt-2'>
                  <p className='text-sm text-red-600'>{errors.trust}</p>
                </div>
                )}
              </div>
            </div>
          </div>
          <div className='ml-8 w-full max-w-lg mx-auto pt-8'>
            <button className="flex items-center font-karla cursor-default h-min tracking-tight bg-blue-500 transition duration-200 hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 hover:text-blue-50 py-2 px-4 pr-3 rounded-lg font-medium text-white">
              <p className='mr-1.5'>Submit</p>
              <ArrowRight className="text-white" />
            </button>
          </div>
        </div>
      </main>
    </div>
  )
}